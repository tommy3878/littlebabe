function [ RGB ] = WaveLengthToRGB2( WaveLength )
%The purpose of this function is to convert a wave length into RGB values
%This function is to convert a wave length(measured in
%nanometres) into an equivalent set of RGB vlaues by multiplying 255 to the multiplier which will then approximate
%the colour of light for the specified wave length.
%This is an approximation only.
%Author: Wei Liang Qian
    
    % http://www.mathworks.com/help/matlab/ref/containers.map-class.html
    % initiate RGB object for easier reference
    keySet =   {'R', 'G', 'B'};
    valueSet = [0, 0, 0];
    RGB = containers.Map(keySet,valueSet);
    
    w=WaveLength;
    
    % http://www.mathworks.com/help/matlab/ref/switch.html
    
    switch w
        % Violet - Blue
        case (380<=w)&&(w<=440)
            RGB('R')=255*(440-w)/60;
            RGB('G')=255*0;
            RGB('B')=255*1;
        
        % Blue - Cyan
        case (w<=440)
            RGB('R')=255*(440-w)/60;
            RGB('G')=255*0;
            RGB('B')=255*1;
        % Blue - Cyan
        case (w<=490)   
            RGB('R')=255*0;
            RGB('G')=255*(w-440)/50;
            RGB('B')=255*1;
    
        % Cyan - Green
        case (w<=510)
            RGB('R')=255*0;
            RGB('G')=255*1;
            RGB('B')=255*(510-w)/20;
        
        % Green - Yellow    
        case (w<=580)
            RGB('R')=255*(w-510)/70;
            RGB('G')=255*1;
            RGB('B')=255*0;
    %Green - Yellow
    elseif (580<=w)&&(w<=645)
        R=255*1;
        G=255*(645-w)/65;
        B=255*0;
    %Yellow - Red  
    elseif (645)&&(w<=780)
        R=255*1;
        G=255*0;
        B=255*0;
    %Not in the specific range
    else 
        R=0;
        G=0;
        B=0;
end
    
    
    
    
   
    
    
    
    






